// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}
model TypeJob {
  id_type_job   String       @id @default(auto()) @map("_id") @db.ObjectId
  type_job_name String
  typeDetails   TypeDetail[]
}

model TypeDetail {
  id_type_detail String        @id @default(auto()) @map("_id") @db.ObjectId
  detail_name    String
  image          String
  id_type_job    String
  typeJob        TypeJob      @relation(fields: [id_type_job], references: [id_type_job])
  jobCatalog     JobCatalog[]
}

model JobCatalog {
  id_job_catalog   String       @id @default(auto()) @map("_id") @db.ObjectId
  name_job_catalog String
  id_type_detail   String
  typeDetail       TypeDetail @relation(fields: [id_type_detail], references: [id_type_detail])
  jobs             Job[]
}

model User {
  id_user       String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String
  password      String
  phone         String
  birth_day     DateTime? // Có thể cần thay đổi kiểu dữ liệu tại đây
  gender        Boolean
  role          String
  skill         String
  certification String
  hash          String
  hashedRt      String?
  jobs          Job[]
  hiredBy       HireJob[]
  comments      Comment[]
}

model Job {
  id_job            String       @id @default(auto()) @map("_id") @db.ObjectId
  job_name          String
  rate              String
  salary            Int
  image             String
  describe          String
  short_description String
  star              Int
  id_job_catalog    String
  id_creator        String
  creator           User       @relation(fields: [id_creator], references: [id_user])
  hiredBy           HireJob[]
  comments          Comment[]
  jobCatalog        JobCatalog @relation(fields: [id_job_catalog], references: [id_job_catalog])
}

model HireJob {
  id_hire_job String     @id @default(auto()) @map("_id") @db.ObjectId
  id_job      String
  id_user     String
  date_hire   DateTime
  complete    Boolean
  job         Job      @relation(fields: [id_job], references: [id_job])
  user        User     @relation(fields: [id_user], references: [id_user])
}

model Comment {
  id_comment   String     @id @default(auto()) @map("_id") @db.ObjectId
  id_job       String
  id_user      String
  date_comment DateTime
  content      String
  star_comment Int
  job          Job      @relation(fields: [id_job], references: [id_job])
  user         User     @relation(fields: [id_user], references: [id_user])
}
